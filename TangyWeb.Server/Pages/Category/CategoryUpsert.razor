@page "/Category/Create"
@page "/Category/Edit/{Id:int}"
@inject ICategoryRepository categoryRepository
@inject NavigationManager navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/animated-loading-gif-2.gif" />
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>
@code {
    private CategoryDto Category { get; set; } = new();
    public string Title { get; set; } = "Create";

    [Parameter]
    public int Id { get; set; }


    private bool IsLoading;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (this.Id == 0)
            {
                IsLoading = false;
            }
            else
            {
                this.Title = "Update";
                LoadCategory();
            }
        }

        base.OnInitialized();
    }

    private void LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        this.Category = this.categoryRepository.Get(Id);
        this.IsLoading = false;
        StateHasChanged();
    }

    private void UpsertCategory()
    {
        if (this.Category.Id == 0)
        {
            categoryRepository.Create(Category);
        }
        else
        {
            categoryRepository.Update(Category);
        }
        this.navigationManager.NavigateTo("Category");
    }
}
