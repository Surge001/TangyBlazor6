@page "/Product/Price/{Id:int}"
@inject IProductRepository productRepo
@inject IProductPriceRepository productPriceRepo

<h3 class="card-text text-primary mb-3 ml-3">Product Price Management</h3>


<div class="col-10">
    @if (IsLoading)
    {
        <div class="text-center">
            <img src="/images/animated-loading-gif-2.gif" />
        </div>
    }
    else
    {
        <div class="row border p-2 mb-4">
            <div class="col-11">
                <div class="card-body">
                    <h4>@Product.Name</h4>
                    <span>Category : @Product.Category.Name</span><br />
                    Description: <span>@((MarkupString)Product.Description)</span>
                </div>
            </div>
            <div class="col-1">
                <img src="@Product.ImageUrl" class="w-100" />
            </div>
        </div>
    }
</div>
@code {

    [Parameter]
    public int Id { get; set; }

    private ProductDto Product { get; set; } = new();
    private IEnumerable<ProductPriceDto> ProductPrices = new List<ProductPriceDto>();
    private bool IsLoading { get; set; } = true;


    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        if (isFirstRender)
        {
            IsLoading = true;
            StateHasChanged();
            this.Product = await productRepo.Get(this.Id);
            this.ProductPrices = await productPriceRepo.GetAll(this.Id);
            IsLoading = false;
            StateHasChanged();
        }
    }
}
