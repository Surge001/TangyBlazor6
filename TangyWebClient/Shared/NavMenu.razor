@using Tangy.Common
@inject ISyncLocalStorageService localStorage
@inject ICartService cartService
@implements IDisposable


<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Tangy</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb2 mb-lg-0">
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="/cart">
                        <span class="p-2">

                            <i class="bi bi-cart"></i>(@GetCartCount())
                        </span></NavLink>
                </li>
                <li class="nav-item p-0">
                    <NavLink class="nav-link" href="/summary">
                        <span class="p-2">Summary</span>
                    </NavLink>
                </li>
            </ul>
            <form class="d-flex">
                <ul class="navbar-nav">
                    <li class="nav-item p-0">
                        <NavLink class="nav-link" href="register">
                            <span class="p-2">Register</span>
                        </NavLink>
                    </li>
                    <li class="nav-item p-0">
                        <NavLink class="nav-link" href="login">
                            <span class="p-2">Login</span>
                        </NavLink>
                    </li>
                </ul>
            </form>
        </div>
    </div>
</nav>

@code{
    protected override void OnInitialized()
    {
        this.cartService.OnChange += StateHasChanged;
    }

    public void Dispose(){
        this.cartService.OnChange -= StateHasChanged;
    }
    private int GetCartCount(){

        var cart = this.localStorage.GetItem<List<ShoppingCart>>(SD.ShoppingCart);
        return cart == null ? 0 : cart.Count;
    }
}